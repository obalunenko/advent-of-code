# v4.0.0 (2020-08-30)

This release fix the Go module path, following the best practice as described
in https://blog.golang.org/v2-go-modules.

The previous go.mod in the root directory was invalid, because we have version
v3.x.x tags long before we add the Go modules which make the "go get" command
can not fetch version greater than v3.4.0.

The root directory will be keep for backward compatibility, to be consumed by
users that still use GOPATH, and new user that want to use Go modules should
import "github.com/shuLhan/go-bindata/v4".


# v3.6.0 (2020-07-16)

##  New features

*  Add the ability to configure the asset prefix so it can be exported

By default, the asset function is not exported.  This changes add option to
set the function prefix with `assetprefix` option, so one can make them
exported.

##  Bug fixes

* Fix the default value for cfg.Split

* test: provide a modtime for each test case


# v3.5.2 (2020-05-03)

##  Bug fixes

*  Fix empty assets when running on directory without recursive (#38)

   Due to hasty fixes on #36 and #37, the bug #28 reappear again in issue #38.

##  Enhancements

*  all: refactor the unit tests

   Previous unit tests are really convoluted, its hard to read and its
   even hard to add new tests that reflect use cases in real worlds.
   This causes several issues reappear after fixing another issues.

   This changes rewrite the unit tests by replacing test using go-bindata
   binary with call to Translate() with custom Config depends on each unit
   test.

*  all: cleaning up API, un-export all internal types

*  all: use map to collect list of assets instead of slice


# v3.5.1 (2020-05-01)

##  Bug fixes

*  config: check for duplicate inputs (#37)
*  fsscanner: fix duplicate assets generated without recursive path (#36)


# v3.5.0 (2020-04-07)

##  Enhancements

*  Add verbose option (#21)

   The verbose option ("-verbose") print the file that being scanned.
   For file that is being added (either with include option or not) it will
   print the path prefixed with "+", and for file that is ignored it will
   print the path prefixed with "-".

   The last line will print the name of generated Go file.

##  Bug Fixes

*  Fix stack overflow when loading large data with compress option (#35)

*  Fix empty assets when running on directory without recursive (#28)

   This fix issue that result in empty generated Go when running `go-bindata`
   on directory without recursive ("...") directive.

##  Misc

*  test: fix test with Go version 1.14 or greater


# v3.4.0 (2018-05-19)

Linting task and dependencies is removed from make task. Linting should be
decoupled from any library or repository. It is a tool that not affected the
build, but help on detect bugs or analyze code.

## Enhancements

* @rsc: balance backquoted string concatenation
* Emad Elsaid: Remove duplicate words on README

## Bug Fixes

* @fgrosse: Fix using symbolic links


# v3.3.0 (2017-11-07)

This release is contain major internal refactoring on scanning the file system.

## Enhancements

* Check error and return it

  There are many place where error from file create, write, and close was not
  checked. With the help of tools, all error was checked and returned to the
  caller.

* Move generated content (template) to its own file

  Since we generate go code, the template become noise because its inlined
  with the generator itself, which make the code unreadable. This commit
  split and move the content of generated to its own file `template.go`.

* Refactoring the file scanner

  There are several problems in old file system scanner,

  * It's unreadable.  It's hard to read what the code do from the start
    until the end, which make it even harder to write new function/feature.

  * Each input file is converted to absolute path to handle symlink
    files and/or directory which cause additional process. The new scanner
    work with relative path only.

## Bug Fixes

* @joerocklin: Add the proper 'DO NOT EDIT' tag on file assets
* @komuw: update installation with the right location


# v3.2.0 (2017-11-07)

## New Features

* @ZaniaDeveloper 94068b1 -  Avoid having a big file (#17)

  This feature introduce `-split` option to config and command line. If its set
  the output file is splitted per asset file.

* @typeless 31e070ef - Add `-include` regex pattern to command line option

## Enhancements

* Rewrite makefile
* Remove and ignore testdata output, 'testdata/out', from repository
* Move "DO NOT EDIT" mark to the top, inline with "... generated by ..."

* release:
  * assetReleaseCommon: fix shadowed error variable
  * Rename underscores function name to snake-case

* [lint] Add comment to ByteWriter and StringWriter

* config:
  * Split validate() into validateInput() and validateOutput()
  * Error should not end with punctuation

* convert:
  * findFiles: never, ever use `defer` on recursive function
  * Fix comment on ByName type

* doc:
  * Fix misspellings
  * Fix package comment

* toc
  * Fix space alignment in generated asset names
  * writeGoMap: remove empty second value in range
  * funcOrNil: simplify if-else
  * child: use consistent receiver name

* go-bindata:
  * Use instance of package log to print to stdout and stderr
  * Refactoring parse arguments
  * Add comment to Set method
  * Split and move usage into function
  * Merge version to main
  * Split flag initialization
  * parsingInput:
    * add unit test
    * fix comment and simplify if-else

## Bug Fixes

* [test] convert: fix due to changes of prefix from string to regex


# v3.1.0 (2017-09-10)

## New Features

* @apvail 8f5f6db - Alter `-prefix` to Use Regular Expressions instead of just
  strings
* @akutz 9308d8f - Added MD5 Checksum Support
* @fridolin-koch 468373d - Use os.PathError for more information regarding the
  error
* @baruchlubinsky 4671a58 - Change default package to containing folder of
  output

## Enhancements

* @lebauce 89e7c37 - Make generated code pass gofmt -s
* @andyxning fb998d9- update build info with newer golang
* @kevinburke 7e5ef26 - Simplify RestoreAsset
* @spencerhakim
  * accfe6a - Break binary data up into multiple lines
  * 32b0afc - Add .editorconfig

## Bug Fixes

* @hemc4 db443d7 - Remove `go vet` from dependency
* @andreas-kupries b7d2e98 - Fix duplication of the last path element for paths
  which do not have the -prefix to strip
